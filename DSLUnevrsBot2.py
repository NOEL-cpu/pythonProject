import asyncio
import logging
import string
import random

from aiogram import Bot
from aiogram import Dispatcher
from aiogram import types
from aiogram.filters import CommandStart, Command
from aiogram.types import FSInputFile
from aiogram.types import callback_query
from googletrans import Translator



import PutToDir
import countOpenWordInfo
from Translator import translator

BOT_TOKEN = "5836801048:AAHrAtSk4LuGMQlITBn6Q3Cz91HxL_1mv94"
dp = Dispatcher()  # —à–ª–µ—Ç  —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º –≤ –Ω–∞—à –±–æ—Ç, —Ç.–µ –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Å–æ–±—ã—Ç–∏–π

bot = Bot(token=BOT_TOKEN)  # –≠–∫–∑—ç–º–ø–ª—è—Ä –±–æ—Ç


@dp.message(CommandStart())
async def handle_start(message: types.Message):
    await message.answer(text=f"Hello, {message.from_user.full_name}!")


@dp.message(Command("help"))
async def handle_help(message: types.Message):
    text = "I'm and echo bot.\nSend me any message!"
    await message.answer(text=text)


# @dp.message()
# async def send_image_to_telegram(image_path, chat_id):
# –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
# with open(image_path, 'rb') as photo:
# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –±–æ—Ç–∞
#  await bot.send_photo(chat_id=message.chat.id, photo)



@dp.message()
async def echo_message(message: types.Message):  # —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑–≤—ã–≤–∞–µ—Ç—Å—è  –∫–∞–∂–¥—ã–π —Ä–∞–∑ –∫–æ–≥–¥–∞ –≤ —Ç–≥ —á—Ç–æ —Ç–æ –ø—Ä–æ–∏—Å–∫—Ö–æ–¥–∏—Ç
    """

    :type message: object
    """
    await message.answer(
        text="I am start ",)
#33–ë–ª–æ–∫ –±–ª–æ–∫ –æ—Ç—Å—ã–ª–∫–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏
    photo22 = FSInputFile('D://1.2PythonTelegBot Dss//apple.jpg')
    await bot.send_photo(chat_id=message.chat.id, photo=photo22)
#33end
    # try:
    #
    #      with open('D://1.2PythonTelegBot Dss//apple.jpg') as photofile:
    #         chat_id1 = message.chat.id
    #         print('2222', chat_id1)
    #         print('3333',type(photofile))
    #
    #      await bot.send_photo(chat_id=chat_id1, photo=photofile)
    #      await message.answer_photo(photofile, caption="new phpoto")
    # except Exception as e:
    #      await message.reply(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
    #
    # try:
    #     photo22=InputFile('D://1.2PythonTelegBot Dss//apple.jpg')
    #
    #     await message.answer_photo(photo22, caption="new phpoto")
    #
    #


    await message.send_copy(chat_id=message.chat.id)
    text11 = message.text
#–±–ª–æ–∫ –ø–µ—Ä–µ–≤–æ–¥–∞
    translator = Translator()
    translator_word = translator.translate(text11, src='en', dest='ru').text
    await message.answer(translator_word)
    print(text11, translator_word)
#–±–ª–æ–∫ –ø–µ—Ä–µ–≤–æ–¥–∞ end
    #
    # with open("C:/Users/AdminX/PycharmProjects/pythonProject/folder/l/lie/lie.jpg", 'rb') as photofile:
    #         await bot.send_photo(photo= photofile)
    #     pathOfpictureForSendUser='NOTPicture'
    #     pathOfpictureForSendUser =PutToDir.alfabet(text11)
    #
    #     if(pathOfpictureForSendUser != 'NOTPicture'):
    #       #  photo = InputFile(pathOfpictureForSendUser)
    #         await message.reply_photo(photo='C:/Users/AdminX/PycharmProjects/pythonProject/folder/l/lie/lie.jpg')

#–±–ª–æ–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å


    # except ValueError as exc:
    #     print('–ò—Å–∫–ª  Value erorr1 (–ø–æ—Ç–æ–º—É —á—Ç–æ –Ω–µ —Ç–µ–∫—Å—Ç')
    #   #  print(repr(exc.errors()[0]['type']))
    #
    # except TypeError:
    #     print('–æ—Ç—Ä–∞–±–æ—Ç–∞–ª exeption 70 str')
    #     await message.reply(text="TypeError wrong üôÇ")
    #     print("3")

    try:
        #65 –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏–º–µ–Ω–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏
        # –ë–∞–∑–æ–≤—ã–π URL
        base_url = "C://Users//AdminX//PycharmProjects//pythonProject//folder//bankOfPictures//"
        #D://1.2PythonTelegBot Dss//
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
        length = 8  # –î–ª–∏–Ω–∞ —Å–ª—É—á–∞–π–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
        letters_and_digits = string.ascii_letters + string.digits
        random_string = ''.join(random.choice(letters_and_digits) for i in range(length))
        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
        random_filename = random_string + ".jpg"
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ URL
        new_url = base_url + random_filename
        # –í—ã–≤–æ–¥ –Ω–æ–≤–æ–≥–æ URL
        print(new_url)
        #65 end

        #66 –±–ª–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏
        await bot.download(message.photo[-1], destination=new_url)
         #   print (type(message.photo))
        print("–æ—Ç–ø–∞–≤–∫–∞ —Ñ–æ—Ç–æ —É—Å–ø–µ—à–Ω–æ")
        #66
    except ValueError as exc2:
        print('–ò—Å–∫–ª  Value erorr2 (–ø–æ—Ç–æ–º—É —á—Ç–æ –Ω–µ –∫–∞—Ä—Ç–∏–Ω–∫–∞')



async def main():
    logging.basicConfig(level=logging.DEBUG)
    print("0")
    await dp.start_polling(bot)  # polling - —ç—Ç–æ –æ–ø—Ä–æ—Å  #?dp. —ç—Ç–æ –¥–∏—Å–ø–∞—á–µ—Ä –±—ã–ª –æ–ø–∏—Å–∞–Ω –≤–Ω–∞—á–∞–ª–µ

    print("1")


if __name__ == "__main__":
    asyncio.run(main())
    print("0 !!! Sn programm started")
