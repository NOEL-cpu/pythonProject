import asyncio
import logging

from googletrans import Translator
from aiogram import Bot
from aiogram import Dispatcher
from aiogram import types
from aiogram.filters import CommandStart, Command
import PutToDir
import countOpenWordInfo


BOT_TOKEN = "5836801048:AAHrAtSk4LuGMQlITBn6Q3Cz91HxL_1mv94"
dp = Dispatcher()  # —à–ª–µ—Ç  —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º –≤ –Ω–∞—à –±–æ—Ç, —Ç.–µ –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Å–æ–±—ã—Ç–∏–π


@dp.message(CommandStart())
async def handle_start(message: types.Message):
    await message.answer(text=f"Hello, {message.from_user.full_name}!")


@dp.message(Command("help"))
async def handle_help(message: types.Message):
    text = "I'm and echo bot.\nSend me any message!"
    await message.answer(text=text)


@dp.message()
async def echo_message(message: types.Message):  # —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑–≤—ã–≤–∞–µ—Ç—Å—è  –∫–∞–∂–¥—ã–π —Ä–∞–∑ –∫–æ–≥–¥–∞ –≤ —Ç–≥ —á—Ç–æ —Ç–æ –ø—Ä–æ–∏—Å–∫—Ö–æ–¥–∏—Ç
    # await bot.send_message(
    #     chat_id=message.chat.id,
    #     text="Start processing...",
    # )
    # await bot.send_message(
    #     chat_id=message.chat.id,
    #     text="Detected message...",
    #     reply_to_message_id=message.message_id,
    # )

    await message.answer(
        text="Wait a second...",
    )
    try:

        await message.send_copy(chat_id=message.chat.id)
        text11 = message.text
#–±–ª–æ–∫ –ø–µ—Ä–µ–≤–æ–¥–∞
        translator = Translator()
        translator_word = translator.translate(text11, src='en', dest='ru').text
        await message.answer(translator_word)

        print(text11, translator_word)
#–±–ª–æ–∫ –ø–µ—Ä–µ–≤–æ–¥–∞ end
        PutToDir.alfabet(text11)
        print("2")
    except TypeError:
        await message.reply(text="Something new üôÇ")
        print("3")


async def main():
    logging.basicConfig(level=logging.DEBUG)
    bot = Bot(token=BOT_TOKEN)  # –≠–∫–∑—ç–º–ø–ª—è—Ä –±–æ—Ç
    print("0")
    await dp.start_polling(bot)  # polling - —ç—Ç–æ –æ–ø—Ä–æ—Å  #?dp. —ç—Ç–æ –¥–∏—Å–ø–∞—á–µ—Ä –±—ã–ª –æ–ø–∏—Å–∞–Ω –≤–Ω–∞—á–∞–ª–µ

    print("1")


if __name__ == "__main__":
    asyncio.run(main())
    print("4")
